{"version":3,"sources":["components/Array.jsx","components/Button.jsx","components/SortingAlgorithms.js","components/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Array","onInput","className","onSubmit","e","preventDefault","type","placeholder","min","max","onChange","target","value","Button","name","onClick","bubbleSort","array","i","j","compares","length","push","swap","selectionSort","minIndex","insertionSort","key","quickSortHelper","quickSort","low","high","mid","Math","floor","pivot","mergeSortHelper","mergeSort","left","right","parseInt","size1","size2","leftArray","rightArray","k","merge","x","y","temp","SortingVisualizer","setArray","useState","speed","setSpeed","spd","style","margin","SortingAlgorithms","slice","arrayBars","document","getElementsByClassName","setTimeout","barOne","barTwo","barOneStyle","barTwoStyle","height","console","log","backgroundColor","reset","map","index","App","size","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae769107.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Array = ({onInput}) => {\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className='array-form' >\r\n            <form onSubmit={submitHandler}>\r\n                Array Size: <input className='resized-textbox' type='number'\r\n                     placeholder='5-150' \r\n                     min='5'\r\n                     max='150'\r\n                     onChange={(e) => onInput(e.target.value)}\r\n                     />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Array\r\n","import React from 'react'\r\n\r\nconst Button = ({name,type,onClick}) => {\r\n\r\n    return (\r\n        <button className='btn' type={type} onClick={onClick}>{name}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","export const bubbleSort=(array) =>{\r\n    const compares = [];\r\n    let i, j;\r\n    for(i = 0; i < array.length; i++){\r\n        for(j = 0; j < array.length-i-1;j++){\r\n            if(array[j] > array[j+1]){\r\n                compares.push([j,j+1])\r\n                swap(array,j,j+1);\r\n            }\r\n\r\n        }\r\n    }\r\n    return compares\r\n}\r\n\r\nexport const selectionSort=(array)=>{\r\n    const compares = [];\r\n\r\n    for(let i = 0; i< array.length-1; i++){\r\n        let minIndex = i;\r\n        for(let j = i+1; j < array.length; j++){\r\n            if(array[j] < array[minIndex])\r\n                minIndex = j;\r\n        }\r\n        compares.push([i,minIndex]);\r\n        swap(array,i,minIndex);\r\n    }\r\n    return compares\r\n}\r\n\r\nexport const insertionSort=(array)=>{\r\n    const compares = [];\r\n    let i,key,j;\r\n    for(i = 1; i < array.length; i++){\r\n        key = array[i];\r\n        j = i-1;\r\n\r\n        while (j >= 0 && array[j] > key){\r\n            array[j+1] = array[j];\r\n            compares.push([j+1,array[j]]);  // bar1 gets replaced by bar2\r\n            j = j-1;\r\n        }\r\n        array[j+1] = key;\r\n        // bar1 gets replaced by bar2\r\n        compares.push([j+1,key]);\r\n    }\r\n\r\n    return compares\r\n}\r\n\r\nexport const quickSortHelper=(array)=>{\r\n    const compares = [];\r\n    quickSort(array,0,array.length-1,compares);\r\n    return compares;\r\n}\r\n\r\n\r\nfunction quickSort(array, low, high,compares){\r\n\r\n    if(low < high){\r\n        // PIVOT AS THE END\r\n        // let pi = partition(array,low,high,compares);\r\n\r\n        // quickSort(array,low,pi-1,compares);\r\n        // quickSort(array,pi+1,high,compares);\r\n\r\n        // PIVOT AS THE MID\r\n        let mid = Math.floor(low+(high-low)/2);\r\n        let pivot = array[mid];\r\n        let i = low;\r\n        let j = high;\r\n        if(i <= j)\r\n            compares.push([mid,1111]);\r\n        while(i <= j){\r\n            while(array[i] < pivot){\r\n                i++;\r\n            }\r\n            while(array[j] > pivot){\r\n                j--;\r\n            }\r\n            if(i <= j){\r\n                swap(array,i,j);\r\n                compares.push([i,j]);\r\n                i++;\r\n                j--;\r\n            }\r\n        }\r\n        if(low < j)\r\n            quickSort(array,low,j,compares);\r\n        if(high > j)\r\n            quickSort(array,i,high,compares);\r\n    }\r\n}\r\n\r\n// function partition(array, low, high, compares){\r\n\r\n//     // PIVOT AS THE END\r\n//     let pivot = array[high];\r\n//     let i = low - 1;\r\n\r\n//     for(let j = low; j <= high-1; j++){\r\n//         if(array[j] < pivot){\r\n//             i++;\r\n//             swap(array,i,j);\r\n//             compares.push([i,j]);\r\n//         }\r\n//     }\r\n//     swap(array,i+1,high);\r\n//     compares.push([i+1,high]);\r\n//     return (i+1);\r\n\r\n// }\r\n\r\nexport const mergeSortHelper=(array)=>{\r\n    const compares = [];\r\n    mergeSort(array,0,array.length-1,compares);\r\n    return compares;\r\n}\r\n\r\nfunction mergeSort(array,left,right,compares){\r\n    if(left >= right){\r\n        return;\r\n    }\r\n    let mid = left + parseInt((right-left)/2);\r\n    mergeSort(array,left,mid,compares);\r\n    mergeSort(array,mid+1,right,compares);\r\n    merge(array,left,right,mid,compares);\r\n}\r\n\r\nfunction merge(array,left, right, mid, compares){\r\n\r\n    let size1 = mid - left + 1;\r\n    let size2 = right - mid;\r\n\r\n    let leftArray = new Array(size1);\r\n    let rightArray =  new Array(size2);\r\n\r\n    for(let i = 0; i < size1; i++){\r\n        leftArray[i] = array[left+i];\r\n    }\r\n    for(let j = 0; j < size2; j++){\r\n        rightArray[j] = array[mid + j + 1];\r\n    }\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = left;\r\n\r\n    while(i < size1 && j < size2){\r\n        if(leftArray[i] <= rightArray[j]){\r\n            array[k] = leftArray[i];\r\n            compares.push([k,leftArray[i]]); // bar1 is index, bar2 is height value\r\n            i++;\r\n        }\r\n        else{\r\n            array[k] = rightArray[j];\r\n            compares.push([k,rightArray[j]]); // bar1 is index, bar2 is height value\r\n            j++\r\n        }\r\n        k++;\r\n    }\r\n\r\n    while(i < size1){\r\n        array[k] = leftArray[i];\r\n        compares.push([k,leftArray[i]]); // bar1 is index, bar2 is height value\r\n        i++;\r\n        k++;\r\n    }\r\n    while(j < size2){\r\n        array[k] = rightArray[j];\r\n        compares.push([k,rightArray[j]]); // bar1 is index, bar2 is height value\r\n        j++;\r\n        k++;\r\n    }\r\n}\r\n\r\n\r\nfunction swap(array,x,y){\r\n\r\n    var temp = array[x];\r\n    array[x] = array[y];\r\n    array[y] = temp;\r\n}","import React from 'react'\r\nimport Button from './Button.jsx'\r\nimport { useState } from 'react'\r\nimport * as SortingAlgorithms from './SortingAlgorithms.js'\r\n\r\nconst SortingVisualizer = ({array,setArray}) => {\r\n\r\n\r\n    // const [sortedArray,setSortedArray] = useState(array)\r\n    const [speed,setSpeed] = useState(1);\r\n\r\n    const bubbleSort=()=>{\r\n\r\n        // Send a copy of array to bubblesort, so it can get the indexes where swaps are made\r\n        // So we can swap the heights of the bars itself but not the actual array\r\n        const compares = SortingAlgorithms.bubbleSort(array.slice());\r\n        for(let i = 0; i < compares.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(()=>{\r\n                const [barOne,barTwo] = compares[i];\r\n                const barOneStyle = arrayBars[barOne].style;\r\n                const barTwoStyle = arrayBars[barTwo].style;\r\n                const temp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = temp;\r\n            },i*speed)\r\n        }\r\n        \r\n        // Actually sort the array so clicking bubblesort won't \"sort\" again\r\n        SortingAlgorithms.bubbleSort(array)\r\n    }\r\n    \r\n    const InsertionSort=()=>{\r\n\r\n        const compares = SortingAlgorithms.insertionSort(array.slice());\r\n        for(let i = 0; i < compares.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(()=>{\r\n                const [barOne,barTwo] = compares[i];\r\n                const barOneStyle = arrayBars[barOne].style;\r\n                // const barTwoStyle = arrayBars[barTwo].style;\r\n                barOneStyle.height = `${barTwo}px`;\r\n            },i*speed)\r\n        }\r\n        SortingAlgorithms.insertionSort(array);\r\n        console.log(array);\r\n\r\n    }\r\n\r\n    const SelectionSort=()=>{\r\n        \r\n        const compares = SortingAlgorithms.selectionSort(array.slice());\r\n        for(let i = 0; i < compares.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(()=>{\r\n                const [barOne,barTwo] = compares[i];\r\n                const barOneStyle = arrayBars[barOne].style;\r\n                const barTwoStyle = arrayBars[barTwo].style;\r\n                const temp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = temp;\r\n            },i*speed)\r\n        }\r\n        SortingAlgorithms.selectionSort(array);\r\n    }\r\n    \r\n    const MergeSort=()=>{\r\n\r\n        const compares = SortingAlgorithms.mergeSortHelper(array.slice());\r\n        for(let i = 0; i < compares.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(()=>{\r\n                const [barOne,barTwo] = compares[i];\r\n                const barOneStyle = arrayBars[barOne].style;\r\n                barOneStyle.height = `${barTwo}px`;\r\n            },i*speed)\r\n        }\r\n\r\n        SortingAlgorithms.mergeSortHelper(array);\r\n        console.log(array);\r\n    }\r\n\r\n    function reset(){\r\n        var arrayBars = document.getElementsByClassName('array-bar');\r\n        for(var i = 0; i < arrayBars.length;i++){\r\n            arrayBars[i].style.backgroundColor = 'blueviolet';\r\n        }\r\n    }\r\n\r\n    const QuickSort=()=>{\r\n        const compares = SortingAlgorithms.quickSortHelper(array.slice());\r\n        for(let i = 0; i < compares.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(()=>{\r\n                const [barOne,barTwo] = compares[i];\r\n                if(barTwo !== 1111){\r\n                    const barOneStyle = arrayBars[barOne].style;\r\n                    const barTwoStyle = arrayBars[barTwo].style;\r\n                    const temp = barOneStyle.height;\r\n                    barOneStyle.height = barTwoStyle.height;\r\n                    barTwoStyle.height = temp;\r\n                }\r\n                else{\r\n                    arrayBars[barOne].style.backgroundColor = 'red';\r\n                }\r\n\r\n            },i*speed)\r\n        }\r\n        // Need to figure out why the bars that changed to red are not getting reset\r\n        reset(); \r\n        SortingAlgorithms.quickSortHelper(array);\r\n    }\r\n\r\n    const changeSpeed=(spd)=>{\r\n        setSpeed(parseInt(spd));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='header-container'> \r\n                <div className='speed-container' onChange={(e)=>changeSpeed(e.target.value)}>\r\n                    <label className='speed'>Speed: </label>\r\n                    <input type='radio' style={{margin:'10px'}}value='25' name='speed'/>Slow\r\n                    <input type='radio' style={{margin:'10px'}}value='5' name='speed'/>Medium\r\n                    <input type='radio' style={{margin:'10px'}}value='1' name='speed'/>Fast\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='header'>\r\n                <Button name='BubbleSort' onClick={bubbleSort}/>\r\n                <Button name='InsertionSort' onClick={InsertionSort}/>\r\n                <Button name='SelectionSort' onClick={SelectionSort}/>\r\n                <Button name='MergeSort' onClick={MergeSort}/>\r\n                <Button name='QuickSort' onClick={QuickSort}/>\r\n            </div>\r\n\r\n            <div className='Array-Visual-Container'>\r\n                {array.map((value,index) => (\r\n                    <div className='array-bar' key={index} style={{height:`${value}px`}}>\r\n                    \r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className='console'>\r\n                <h1 className='console-title'>Console:</h1>\r\n                Sorted Array:<br/>\r\n                {array.map((value) =>(`${value}, `))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SortingVisualizer\r\n","// import Header from \"./components/Header\"\nimport Array from \"./components/Array\"\nimport SortingVisualizer from \"./components/SortingVisualizer\"\nimport { useState } from \"react\"\n\nfunction App() {\n\n  const [array,setArray] = useState([])\n  \n\n  /* Creating the Array based on array size provided from Array Component */\n  const createArray = (size) => {\n    if(size > 150)\n      size = 150;\n    if(size < 5)\n      size = 5;\n\n    setArray([])\n    for(let i = 0; i < size; i++){\n        setArray(array => [...array,Math.floor(Math.random() * 600)+1])\n    }\n  }\n\n\n\n  return (\n    <div>\n        <div className='header-container'>\n          <Array onInput={createArray}/>\n        </div>\n\n        <div>\n          <SortingVisualizer array={array} setArray={setArray}/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}